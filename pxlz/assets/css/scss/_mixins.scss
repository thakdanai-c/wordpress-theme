//layout mixins - start

@mixin edgtfTableLayout() {
    position: relative;
    display: table;
    table-layout: fixed;
    height: 100%;
    width: 100%;
}

@mixin edgtfTableCellLayout() {
    position: relative;
    display: table-cell;
    height: 100%;
    width: 100%;
    vertical-align: middle;
}

@mixin edgtfRelativeHolderLayout() {
    position: relative;
    display: inline-block;
    width: 100%;
    vertical-align: middle;
}

@mixin edgtfAbsoluteHolderLayout() {
    position: absolute;
    display: block;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
}

@mixin edgtfTypographyLayout() {
    color: inherit;
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    font-style: inherit;
    line-height: inherit;
    letter-spacing: inherit;
    text-transform: inherit;
}

//layout mixins - end

//transition mixins - start

@mixin edgtfTransition($transition-param...) {
    -webkit-transition: $transition-param;
    -moz-transition: $transition-param;
    transition: $transition-param;
}

@mixin edgtfTransitionTransform($transition-param...) {
    -webkit-transition: -webkit-transform $transition-param;
    -moz-transition: -moz-transform $transition-param;
    transition: transform $transition-param;
}

@mixin edgtfTransform($transform-param...) {
    -webkit-transform: $transform-param;
    -moz-transform: $transform-param;
    transform: $transform-param;
}

@mixin edgtfAnimation($animation-param...) {
    -webkit-animation: $animation-param;
    -moz-animation: $animation-param;
    animation: $animation-param;
}

@mixin edgtfTransformOrigin($animation-param...) {
    -webkit-transform-origin: $animation-param;
    -moz-transform-origin: $animation-param;
    transform-origin: $animation-param;
}

//transition mixins - end

/* common mixins - start */

@mixin edgtfBckImageStyle() {
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center center;
}

@mixin edgtfImageOverlayHoverStyle($with-hover: true) {
    @if ($with-hover) {
        &:hover {
            &:after {
                opacity: 1;
            }
        }
        &:after {
            @include edgtfAbsoluteHolderLayout();
            content: '';
            background-color: rgba($default-heading-color, .4);
            opacity: 0;
            @include edgtfTransition(opacity .2s ease-in-out);
        }

    } @else {
        @include edgtfAbsoluteHolderLayout();
        content: '';
        background-color: rgba($default-heading-color, .4);
        opacity: 0;
        @include edgtfTransition(opacity .2s ease-in-out);
    }
}

@mixin edgtfButtonDefaultStyle() {
    font-family: $default-heading-font;
    position: relative;
    display: inline-block;
    vertical-align: middle;
    width: auto;
    outline: none;
    font-size: 14px;
    line-height: 1em;
    letter-spacing: 0.16em;
    font-weight: 500;
    text-transform: uppercase;
    box-sizing: border-box;
    margin: 0;
    border-radius: 0;
    -webkit-appearance: none;

    @include edgtfTransition(
                    color .2s ease-in-out,
                    background-color .2s ease-in-out,
                    border-color .2s ease-in-out);
}

@mixin edgtfButtonTransparentColor() {
    color: $default-text-color;
    background-color: transparent;
}

@mixin edgtfButtonSolidColor() {
    color: #fff;
    background-color: $first-main-color;
    border: 2px solid transparent;
}

@mixin edgtfButtonSolidHoverColor() {
    color: #fff;
    background-color: $default-heading-color;
}

@mixin edgtfButtonOutlineColor() {
    color: $first-main-color;
    background-color: transparent;
    border: 2px solid $first-main-color;
}

@mixin edgtfButtonOutlineHoverColor() {
    color: #fff;
    background-color: $first-main-color;
    border-color: $first-main-color;
}

@mixin edgtfButtonSmallParams() {
    padding: 16px 21px;
}

@mixin edgtfButtonMediumParams() {
    padding: 20px 27px;
}

@mixin edgtfButtonLargeParams() {
    padding: 22px 31px;
}

@mixin edgtfButtonHugeParams() {
    padding: 24px 35px;
}

@mixin edgtfButtonPlusSign() {
    &:before {
        content: '\f067';
        display: inline-block;
        font-family: FontAwesome;
        font-size: 70%;
        left: 0;
        line-height: inherit;
        position: absolute;
        top: 1px;
        vertical-align: middle;
    }
}

@mixin edgtfItalicLink($color:$first-main-color,$hover-color:$default-heading-color,$text-decoration:none,$important:null) {
    @include edgtfTransition(color .2s ease-out);

    background-color: transparent $important;
    color: $color $important;
    font-size: 13px $important;
    font-style: italic;
    text-decoration: $text-decoration;

    &:hover {
        color: $hover-color $important;
    }
}

@mixin edgtfTab() {
    @include edgtfRelativeHolderLayout();

    clear: both;
    list-style: none;
    margin: 0;
    padding: 0;

    > li {
        display: inline-block;
        margin-bottom: 3px;
        position: relative;
        vertical-align: middle;

        a {
            background-color: $spec-color-one;
            color: $default-text-color;
            display: inline-block;
            font-family: $default-heading-font;
            font-size: 17px;
            letter-spacing: 0.05em;
            padding: 11px 29px;
            position: relative;
            text-transform: uppercase;
            vertical-align: top;
            box-sizing: border-box;

            &:hover {
                background-color: $first-main-color;
                color: #fff;

                @include edgtfTransition(
                                color .2s ease-out,
                                background-color .2s ease-out,
                                border-color .2s ease-out
                );
            }
        }

        &.active,
        &.ui-state-active {
            a {
                background-color: $first-main-color;
                color: #fff;
            }
        }
    }
}

@mixin edgtfLinearGradient() {
    background: -moz-linear-gradient(top, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0.83) 100%);
    background: -webkit-linear-gradient(top, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0.83) 100%);
    background: linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0) 65%, rgba(0, 0, 0, 0.83) 100%);
}

@mixin edgtfPlaceholder {
    &::-webkit-input-placeholder {
        @content
    }
    &:-moz-placeholder {
        @content
    }
    &::-moz-placeholder {
        @content
    }
    &:-ms-input-placeholder {
        @content
    }
}

/* common mixins - end */

/* mixins styles - start */

%input-style {
    width: 100%;
    margin: 0 0 17px;
    padding: 15px 18px;
    font-family: inherit;
    font-size: 12px;
    line-height: 1em;
    font-weight: inherit;
    color: $default-heading-color;
    background-color: #fcfcfc;
    border: 2px solid #ebebeb;
    border-radius: 3px;
    outline: 0;
    -webkit-appearance: none;
    cursor: pointer;
    box-sizing: border-box;

    @include edgtfTransition(border-color 0.2s ease-in-out);

    &:focus {
        color: $default-heading-color;
        border-color: $default-text-color;
    }

    @include edgtfPlaceholder {
        color: #d2d2d2;
    }
}

/* mixins styles - end */

//media query mixins - start

@mixin laptop-landscape-large {
    @media only screen and (max-width: map-get($breakpoints, laptop-landscape-large)) {
        @content;
    }
}

@mixin laptop-landscape-medium {
    @media only screen and (max-width: map-get($breakpoints, laptop-landscape-medium)) {
        @content;
    }
}

@mixin laptop-landscape {
    @media only screen and (max-width: map-get($breakpoints, laptop-landscape)) {
        @content;
    }
}

@mixin ipad-landscape {
    @media only screen and (max-width: map-get($breakpoints, ipad-landscape)) {
        @content;
    }
}

@mixin ipad-portrait {
    @media only screen and (max-width: map-get($breakpoints, ipad-portrait)) {
        @content;
    }
}

@mixin phone-landscape {
    @media only screen and (max-width: map-get($breakpoints, phone-landscape)) {
        @content;
    }
}

@mixin phone-portrait {
    @media only screen and (max-width: map-get($breakpoints, phone-portrait)) {
        @content;
    }
}

@mixin smaller-phone-portrait {
    @media only screen and (max-width: map-get($breakpoints, smaller-phone-portrait)) {
        @content;
    }
}

//media query mixins - end

//animation mixin - start

@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
        @content;
    }

    @keyframes #{$name} {
        @content;
    }
}

@mixin animation($name, $duration, $repeat, $timing, $delay) {
    -webkit-animation-name: $name;
    -webkit-animation-duration: $duration;
    -webkit-animation-iteration-count: $repeat;
    -webkit-animation-timing-function: $timing;
    -webkit-animation-delay: $delay;
    -webkit-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

    animation-name: $name;
    animation-duration: $duration;
    animation-iteration-count: $repeat;
    animation-timing-function: $timing;
    animation-delay: $delay;
    animation-fill-mode: forwards; /* this prevents the animation from restarting! */
}

//animation mixin - end

@mixin edgtfDropHardShadow {
    $image-gutter: 40px;

    margin: 0 $image-gutter $image-gutter 0;
    position: relative;
    width: calc(100% - #{$image-gutter});

    &:before {
        background-color: $spec-color-one;
        content: '';
        display: block;
        height: 100%;
        left: $image-gutter;
        position: absolute;
        top: $image-gutter;
        width: 100%;
        z-index: 0;
    }

    @include phone-landscape() {
        $image-gutter: 20px;

        margin: 0 $image-gutter $image-gutter 0;
        width: calc(100% - #{$image-gutter});

        &:before {
            left: $image-gutter;
            top: $image-gutter;
        }
    }
}

@mixin edgtfAdditionalHeading {
    color: $default-heading-color;
    font-size: 1.0625em; // 17px
    font-style: italic;
    font-weight: 500;
    line-height: 1.3em;
    margin: 20px 0;

    a {
        @include edgtfTypographyLayout();

        &:hover {
            color: $first-main-color;
        }
    }
}